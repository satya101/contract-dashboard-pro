// src/pages/Results.jsx
import React, { useEffect, useRef, useState } from "react";
import { useLocation, Link } from "react-router-dom";
import ResultsHeader from "../components/ResultsHeader.jsx";
import SummaryKeyCards from "../components/SummaryKeyCards.jsx";
import AuditSection from "../components/AuditSection.jsx";
import FeedbackPanel from "../components/FeedbackPanel.jsx";
import { exportSummaryAsPDF } from "../utils/pdfExport.js";
import { loadLastSummary, saveLastSummary } from "../services/storage.js";
import { shareEmail } from "../services/API.js";

const asObj = (v) => (v && typeof v === "object" ? v : {});
const esc = (s) => (s ?? "").toString();

const buildEmailHTML = (fileName, summary) => {
  const s = asObj(summary);
  const pd = asObj(s.property_details);
  const ft = asObj(s.financial_terms);
  const kd = asObj(s.key_dates);

  return `
  <div style="font-family:Inter,system-ui,Segoe UI,Roboto,Arial,sans-serif;line-height:1.55;color:#111827">
    <h2 style="margin:0 0 8px 0">Section 32 Report</h2>
    <div style="color:#6b7280;margin-bottom:16px">${esc(fileName)}</div>

    <h3 style="margin:16px 0 8px 0">Contract Summary</h3>
    <table cellspacing="0" cellpadding="8" style="border-collapse:separate;border-spacing:0 8px;width:100%">
      <tr style="background:#f8fafc">
        <td style="width:33%">
          <strong>Property Details</strong><br/>
          Address: ${esc(pd.address)}<br/>
          Lot/Plan: ${esc(pd.lot_plan)}<br/>
          Land Size: ${esc(pd.land_size)}<br/>
          Zoning: ${esc(pd.zoning)}
        </td>
        <td style="width:33%">
          <strong>Financial Terms</strong><br/>
          Purchase Price: ${esc(ft.purchase_price)}<br/>
          Deposit: ${esc(ft.deposit)}<br/>
          Balance: ${esc(ft.balance)}<br/>
          Stamp Duty: ${esc(ft.stamp_duty)}
        </td>
        <td style="width:33%">
          <strong>Key Dates</strong><br/>
          Settlement: ${esc(kd.settlement)}<br/>
          Finance Due: ${esc(kd.finance_due)}<br/>
          Cooling Off: ${esc(kd.cooling_off)}<br/>
          Possession: ${esc(kd.possession)}
        </td>
      </tr>
    </table>

    <p style="color:#6b7280;margin-top:16px">Generated by S32 Insights Portal.</p>
  </div>`;
};

export default function Results() {
  const location = useLocation();
  const summaryRef = useRef(null);

  const [fileName, setFileName] = useState("");
  const [summary, setSummary] = useState(null);
  const [message, setMessage] = useState(""); // e.g. "No text could be extracted..."

  // Load result from router state (preferred) or from localStorage (fallback)
  useEffect(() => {
    const nav = location.state && location.state.result;
    if (nav) {
      const name = nav.filename || nav.file || "Uploaded Document";
      const sum = asObj(nav.summary);
      setFileName(name);
      setSummary(sum);
      setMessage(nav.message || "");
      saveLastSummary({ fileName: name, summary: sum });
      return;
    }
    const last = loadLastSummary();
    if (last) {
      setFileName(last.fileName || "Uploaded Document");
      setSummary(asObj(last.summary));
    }
  }, [location.state]);

  const onExportPDF = async () => {
    if (!summaryRef.current) return;
    await exportSummaryAsPDF({
      container: summaryRef.current,
      docTitle: fileName || "S32_Insights_Report",
    });
  };

  const onShareEmail = async ({ to }) => {
    if (!summary) return;
    const subject = `S32 Insights Report — ${fileName || "Contract"}`;
    const html = buildEmailHTML(fileName, summary);
    const text = html.replace(/<[^>]+>/g, "");
    const resp = await shareEmail({ to, subject, html }).catch(() => null);
    if (!resp?.ok && !resp?.sent) {
      // graceful fallback
      window.location.href = `mailto:${encodeURIComponent(to)}?subject=${encodeURIComponent(
        subject
      )}&body=${encodeURIComponent(text)}`;
    }
  };

  if (!summary) {
    return (
      <div className="bg-white border rounded-2xl p-10 text-center shadow-sm">
        <p className="mb-2">No result loaded.</p>
        <p>
          Please upload a contract on{" "}
          <Link className="text-blue-600 underline" to="/dashboard">
            AI Analysis
          </Link>
          .
        </p>
      </div>
    );
  }

  return (
    <div>
      <ResultsHeader
        fileName={fileName}
        processedAt={Date.now()}
        processingSeconds={4.2}
        onExportPDF={onExportPDF}    // “Download Report” uses our A4 exporter
        onShareEmail={onShareEmail}  // “Share Report” sends clean HTML email
      />

      {/* subtle banner if backend warned about OCR */}
      {message && (
        <div className="mt-3 mb-2 rounded-lg border border-amber-300 bg-amber-50 px-4 py-3 text-amber-800">
          {message} — Try re-uploading from{" "}
          <Link className="underline" to="/dashboard">
            AI Analysis
          </Link>
          .
        </div>
      )}

      {/* Everything below is what gets exported to PDF */}
      <div ref={summaryRef} className="space-y-4 mt-3">
        <SummaryKeyCards summary={summary} />
        <AuditSection summary={summary} />
        <FeedbackPanel onSubmit={() => {}} />
      </div>
    </div>
  );
}